@model CommonViewModel 
@{
    ViewData["Title"] = "ShowHistoty";
}

<h1>Company Revenue History</h1>
<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/modules/exporting.js"></script>
<script src="https://code.highcharts.com/modules/export-data.js"></script>
<script src="https://code.highcharts.com/modules/accessibility.js"></script>

<style>
    .highcharts-figure, .highcharts-data-table table {
        min-width: 360px;
        max-width: 800px;
        margin: 1em auto;
    }

    .highcharts-data-table table {
        font-family: Verdana, sans-serif;
        border-collapse: collapse;
        border: 1px solid #EBEBEB;
        margin: 10px auto;
        text-align: center;
        width: 100%;
        max-width: 500px;
    }

    .highcharts-data-table caption {
        padding: 1em 0;
        font-size: 1.2em;
        color: #555;
    }

    .highcharts-data-table th {
        font-weight: 600;
        padding: 0.5em;
    }

    .highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {
        padding: 0.5em;
    }

    .highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {
        background: #f8f8f8;
    }

    .highcharts-data-table tr:hover {
        background: #f1f7ff;
    }
</style>
<figure class="highcharts-figure">
    <div id="container"></div>
    <p class="highcharts-description">
        This chart shows how data labels can be added to the data series. This
        can increase readability and comprehension for small datasets.
    </p>
    <p id="data" style="display:block;">@Html.Raw(Model.orderData)</p>
</figure>
<script type="text/javascript">
    var temp = @Html.Raw(Model.orderData);
    //console.log(typeof(temp))
    console.log(temp)
    console.log(typeof (temp))
    console.log(temp[0].OrderDate)
    console.log(temp[0].TotalOfPrice)
    var Dates = []
    var Totals = []
    //for (var i = 0; i <= temp.length; i++) {
    //    var tempDate = new Date(temp[i].OrderDate);
    //    var month = tempDate.getMonth();
    //    Dates.push(month);
    //    Totals.push(temp[i].TotalOfPrice);
    //}

    Highcharts.chart('container', {
        chart: {
            type: 'line'
        },
        title: {
            text: 'Monthly Revenue'
        },
        subtitle: {
            text: ''
        },
        xAxis: {
            categories: Dates
        },
        yAxis: {
            title: {
                text: 'Dollar ($)'
            }
        },
        plotOptions: {
            line: {
                dataLabels: {
                    enabled: true
                },
                enableMouseTracking: false
            }
        },
        series: [{
            name: 'Successed Order',
            data: Totals
        }]
    });
</script>



